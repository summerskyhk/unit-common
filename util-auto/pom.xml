<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>demo</artifactId>
        <groupId>com.zcswl</groupId>
        <version>v0.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <!-- 基于Annotation Processor SPI技术实现的自动生成文件-->
    <!-- https://github.com/lets-mica/mica -->
    <!-- https://github.com/google/auto-->
    <groupId>com.zcswl</groupId>
    <artifactId>util-auto</artifactId>
    <version>${util-common.version}</version>
    <packaging>jar</packaging>

    <properties>
        <google-auto-service.version>1.0-rc6</google-auto-service.version>
    </properties>

    <dependencies>

        <!-- 依赖google auto包，使用@AutoService生成Processor注解处理器文件 META-INF/services/javax.annotation.processing.Processor -->
        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>${google-auto-service.version}</version>
        </dependency>
    </dependencies>

    <!--1,我们可以创建注解处理器，作为我们内部工具类使用，extends AbstractProcessor,例如 AutoFactoriesProcessor-->
    <!--2,创建对应的Processor启动器 META-INF/services/javax.annotation.processing.Processor 文件，同时文件中声明对应的注解启动类 -->
    <!--   对于步骤2，我们同样可以采用google-auto中的@AutoService注解进行自动生成，如果用这个步骤，那我们的编译器就需要添加下面这个(如本文章中)-->
    <!--3,其他jar包在去使用该jar包时，需要去build添加对应的编译器，如果原始的含有注解处理器的jar包不含有对应的META-INF注解时（即工具类不含有下面的build），我们需要去声明-->
    <!--  see util-autoconfigration pom.xml-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.auto.service</groupId>
                            <artifactId>auto-service</artifactId>
                            <version>${google-auto-service.version}</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>


</project>